{"frames":[{"func":"mydata2 %>% mutate(log_BASVURU_ADEDI = log(mydata2$BASVURU_ADEDI))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., log_BASVURU_ADEDI = log(mydata2$BASVURU_ADEDI))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., log_BASVURU_ADEDI = log(mydata2$BASVURU_ADEDI))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers({\n    for (i in seq_along(dots)) {\n        mask$across_cache_reset()\n        quosures <- expand_quosure(dots[[i]]) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (e) \n{\n    local_call_step(dots = dots, .index = i, .fn = \"mutate\", \n        .dot_data = inherits(e, \"rlang_error_data_pronoun_not_found\")) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(bullets, class = c(\"dplyr:::mutate_error\", \"dplyr_error\"), \n    error_name = error_name, error_expression = error_expression, \n    parent = e, bullets = bullets)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Hata: Problem with `mutate()` input `log_BASVURU_ADEDI`.\n\u001B[31mx\u001B[39m non-numeric argument to mathematical function\n\u001B[34mi\u001B[39m Input `log_BASVURU_ADEDI` is `log(mydata2$BASVURU_ADEDI)`.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}